#ifndef MAASERVER_MAASERVICE_H_
#define MAASERVER_MAASERVICE_H_

#include "define.h"

namespace maaserver {

class maaService: public maanet::serverAdapter, 
                  public maanet::packetQueueHandler, 
                  public maasys::runnable {

public:
	maaService();
	virtual ~maaService();
	int start();
	int stop();
	int wait();

public:
	maanet::packetHandler::HPRetCode handlePacket(maanet::connection *_connection,  maanet::packet *_packet);
    bool handlePacketQueue(maanet::packet *_packet, void *args);

	globalInformation* get_global_info() {
		return &global_info;
	}
	
	maanet::packetQueueThread* get_packet_queue_thread() {
		return &taskQueueThread_;
	}

private:
	maaPacketStreamer streamer_;

	globalInformation global_info;
	maanet::transport transport_;

	int32_t read_task_queue_size_;
	int32_t write_task_queue_size_;
	maanet::packetQueueThread taskQueueThread_;
	void run(maasys::cThread *thread, void *arg);

private:
    void initHandleThreads();	
	int initGlobalInfo();
	std::map<int , maanet::connection *> appidTcpMap; 
	std::map<int , char *> appidSourceMap; 
	//std::map<int, maanet::connection *> appsocketConn; 
};

}//namespace maaserver

#endif//MAASERVER_MAASERVICE_H_



